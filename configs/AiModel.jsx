const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "text/plain",
  };

  const CodeGenerationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  
    export const chatSession = model.startChat({
      generationConfig,
      history: [
      ],
    });

    export const GenAiCode = model.startChat({
      generationConfig:CodeGenerationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "Generate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\n\nReturn the response in JSON format with the following schema:\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\n\nHereâ€™s the reformatted and improved version of your prompt:\n\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\n\nReturn the response in JSON format with the following schema:\n\njson\nCopy code\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\nfiles:{\n  \"/App.js\": {\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\n  }\n}\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\n  \n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\n  -Add Emoji icons whenever needed to give good user experinence\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\n- Use icons from lucide-react for logos.\n\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.\n   `,"},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"projectTitle\": \"Dashboard Application\",\n  \"explanation\": \"This project creates a dashboard application with a main layout and several components for displaying data, user profiles, and settings. It utilizes Tailwind CSS for styling and lucide-react icons for visual elements. The application includes a sidebar for navigation, a top bar for user information, and content areas for dashboards, users, and settings. It incorporates date formatting with date-fns and charts using react-chartjs-2, showcasing a comprehensive structure for managing and presenting data.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport Layout from './components/Layout';\\n\\nfunction App() {\\n  return (\\n    <Layout />\\n  );\\n}\\n\\nexport default App;\\n\"\n    },\n    \"/components/Layout.js\": {\n      \"code\": \"import React from 'react';\\nimport Sidebar from './Sidebar';\\nimport TopBar from './TopBar';\\nimport Dashboard from './Dashboard';\\nimport Users from './Users';\\nimport Settings from './Settings';\\nimport { useState } from 'react';\\n\\nconst Layout = () => {\\n    const [activePage, setActivePage] = useState('dashboard');\\n\\n    const handlePageChange = (page) => {\\n        setActivePage(page);\\n    };\\n\\n    return (\\n        <div className=\\\"flex h-screen\\\">\\n        <Sidebar onPageChange={handlePageChange} />\\n        <div className=\\\"flex-1 flex flex-col overflow-hidden\\\">\\n            <TopBar />\\n            <main className=\\\"flex-1 overflow-x-hidden overflow-y-auto p-4\\\">\\n            {\\n                activePage === 'dashboard' && <Dashboard />\\n            }\\n            {\\n                activePage === 'users' && <Users />\\n            }\\n              {\\n                activePage === 'settings' && <Settings />\\n            }\\n            </main>\\n        </div>\\n    </div>\\n    );\\n};\\n\\nexport default Layout;\"\n    },\n    \"/components/Sidebar.js\": {\n      \"code\": \"import React from 'react';\\nimport { Home, Users, Settings, Menu } from 'lucide-react';\\n\\nconst Sidebar = ({onPageChange}) => {\\n  return (\\n    <aside className=\\\"bg-gray-800 text-white w-64 flex flex-col\\\">\\n    <div className=\\\"flex items-center p-4\\\">\\n        <Menu className='w-6 h-6 mr-2' />\\n        <span className=\\\"text-xl font-bold\\\">Dashboard</span>\\n    </div>\\n\\n    <nav className=\\\"flex-1 p-4\\\">\\n        <ul className=\\\"space-y-2\\\">\\n          <li className=\\\"\\\">\\n                <button onClick={()=>onPageChange('dashboard')} className=\\\"flex items-center p-2 hover:bg-gray-700 rounded-md w-full text-left\\\">\\n                    <Home className=\\\"w-5 h-5 mr-2\\\" />\\n                    Dashboard\\n                </button>\\n            </li>\\n            <li>\\n                 <button onClick={()=>onPageChange('users')} className=\\\"flex items-center p-2 hover:bg-gray-700 rounded-md w-full text-left\\\">\\n                    <Users className=\\\"w-5 h-5 mr-2\\\" />\\n                    Users\\n                </button>\\n            </li>\\n             <li>\\n                  <button onClick={()=>onPageChange('settings')} className=\\\"flex items-center p-2 hover:bg-gray-700 rounded-md w-full text-left\\\">\\n                    <Settings className=\\\"w-5 h-5 mr-2\\\" />\\n                    Settings\\n                 </button>\\n            </li>\\n        </ul>\\n    </nav>\\n</aside>\\n  );\\n};\\n\\nexport default Sidebar;\\n\"\n    },\n     \"/components/TopBar.js\": {\n      \"code\": \"import React from 'react';\\nimport { User, Bell, Mail } from 'lucide-react';\\n\\nconst TopBar = () => {\\n  return (\\n    <header className=\\\"bg-gray-100 p-4 border-b flex justify-between items-center\\\">\\n      <div className='font-bold'>Dashboard App ðŸš€</div>\\n      <div className=\\\"flex items-center space-x-4\\\">\\n        <Bell className=\\\"w-5 h-5 text-gray-700\\\" />\\n        <Mail className=\\\"w-5 h-5 text-gray-700\\\"/>\\n        <div className=\\\"flex items-center space-x-2\\\">\\n          <User className=\\\"w-6 h-6 text-gray-700\\\" />\\n          <span className=\\\"text-gray-700 font-medium\\\">John Doe</span>\\n        </div>\\n      </div>\\n    </header>\\n  );\\n};\\n\\nexport default TopBar;\\n\"\n    },\n     \"/components/Dashboard.js\": {\n      \"code\": \"import React from 'react';\\nimport { Clock } from 'lucide-react';\\nimport { format } from 'date-fns';\\nimport { Bar } from 'react-chartjs-2';\\nimport {Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend} from 'chart.js';\\nChartJS.register(\\n  CategoryScale,\\n  LinearScale,\\n  BarElement,\\n  Title,\\n  Tooltip,\\n  Legend\\n);\\n\\nconst Dashboard = () => {\\n  const currentDate = new Date();\\n  const formattedDate = format(currentDate, 'MMM dd, yyyy');\\n  const chartData = {\\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\\n    datasets: [\\n      {\\n        label: 'Sales',\\n        data: [12, 19, 3, 5, 2, 3],\\n        backgroundColor: 'rgb(75, 192, 192)',\\n      },\\n    ],\\n  };\\n\\n  const chartOptions = {\\n    responsive: true,\\n    plugins: {\\n      legend: {\\n        position: 'top',\\n      },\\n      title: {\\n        display: true,\\n        text: 'Monthly Sales Data',\\n      },\\n    },\\n  };\\n  return (\\n    <div className=''>\\n      <h2 className=\\\"text-2xl font-semibold mb-4 flex items-center\\\"><Clock className='mr-2'/> Dashboard <span className='ml-4 text-gray-600'>Date: {formattedDate}</span></h2>\\n        <div className=\\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\\">\\n\\n          <div className=\\\"bg-white shadow rounded p-4\\\">\\n            <h3 className=\\\"text-lg font-semibold mb-2\\\">Total Users</h3>\\n            <p className=\\\"text-3xl font-bold text-green-500\\\">120</p>\\n          </div>\\n\\n          <div className=\\\"bg-white shadow rounded p-4\\\">\\n            <h3 className=\\\"text-lg font-semibold mb-2\\\">Total Sales</h3>\\n            <p className=\\\"text-3xl font-bold text-blue-500\\\">$10,000</p>\\n          </div>\\n\\n          <div className=\\\"bg-white shadow rounded p-4\\\">\\n            <h3 className=\\\"text-lg font-semibold mb-2\\\">Total Products</h3>\\n            <p className=\\\"text-3xl font-bold text-red-500\\\">200</p>\\n        </div>\\n         <div className=\\\"bg-white shadow rounded p-4 col-span-3\\\">\\n                <Bar data={chartData} options={chartOptions} />\\n            </div>\\n        </div>\\n    </div>\\n  );\\n};\\n\\nexport default Dashboard;\\n\"\n    },\n     \"/components/Users.js\": {\n      \"code\": \"import React from 'react';\\nimport { User, Edit, Trash, Search } from 'lucide-react';\\n\\nconst Users = () => {\\n  const users = [\\n    { id: 1, name: 'Alice', email: 'alice@example.com' },\\n    { id: 2, name: 'Bob', email: 'bob@example.com' },\\n    { id: 3, name: 'Charlie', email: 'charlie@example.com' },\\n    { id: 4, name: 'David', email: 'david@example.com' },\\n    { id: 5, name: 'Eve', email: 'eve@example.com' },\\n  ];\\n\\n  return (\\n    <div>\\n      <div className='flex justify-between mb-4 items-center'>\\n        <h2 className=\\\"text-2xl font-semibold flex items-center\\\"><User className='mr-2' /> Users</h2>\\n        <div className=\\\"flex items-center border border-gray-300 rounded-md p-2\\\">\\n              <Search className=\\\"w-4 h-4 text-gray-500 mr-1\\\"/>\\n            <input type=\\\"text\\\" placeholder=\\\"Search users...\\\" className=\\\"outline-none focus:ring-0\\\" />\\n        </div>\\n      </div>\\n      <div className=\\\"overflow-x-auto\\\">\\n        <table className=\\\"min-w-full bg-white border border-gray-300 rounded-md\\\">\\n          <thead>\\n            <tr className=\\\"bg-gray-100\\\">\\n              <th className=\\\"py-2 px-4 border-b font-semibold text-left\\\">ID</th>\\n              <th className=\\\"py-2 px-4 border-b font-semibold text-left\\\">Name</th>\\n              <th className=\\\"py-2 px-4 border-b font-semibold text-left\\\">Email</th>\\n              <th className=\\\"py-2 px-4 border-b font-semibold text-left\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {users.map((user) => (\\n              <tr key={user.id} className='hover:bg-gray-50'>\\n                <td className=\\\"py-2 px-4 border-b\\\">{user.id}</td>\\n                <td className=\\\"py-2 px-4 border-b\\\">{user.name}</td>\\n                <td className=\\\"py-2 px-4 border-b\\\">{user.email}</td>\\n                <td className=\\\"py-2 px-4 border-b flex space-x-2\\\">\\n                  <button className='p-1 rounded hover:bg-gray-200'><Edit className='w-4 h-4 text-blue-500'/></button>\\n                  <button className='p-1 rounded hover:bg-gray-200'><Trash className='w-4 h-4 text-red-500'/></button>\\n                </td>\\n              </tr>\\n            ))}\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default Users;\\n\"\n    },\n     \"/components/Settings.js\": {\n      \"code\": \"import React from 'react';\\nimport { Settings as SettingIcon, Upload, Download, Check, X} from 'lucide-react';\\n\\nconst Settings = () => {\\n  return (\\n    <div>\\n      <h2 className=\\\"text-2xl font-semibold mb-4 flex items-center\\\"><SettingIcon className='mr-2'/>Settings</h2>\\n     <div className='space-y-4'>\\n     \\n        <div className=\\\"bg-white shadow rounded p-4\\\">\\n        <h3 className=\\\"text-lg font-semibold mb-2 flex items-center\\\"><Upload className='mr-2'/> Import Data</h3>\\n           <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center'><Upload className='w-4 h-4 mr-2'/> Upload CSV</button>\\n           \\n        </div>\\n        <div className=\\\"bg-white shadow rounded p-4\\\">\\n             <h3 className=\\\"text-lg font-semibold mb-2 flex items-center\\\"><Download className='mr-2'/> Export Data</h3>\\n            <button className='bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center'><Download className='w-4 h-4 mr-2'/> Download CSV</button>\\n        </div>\\n        <div className=\\\"bg-white shadow rounded p-4\\\">\\n            <h3 className=\\\"text-lg font-semibold mb-2\\\">Account</h3>\\n                <div className=\\\"flex items-center mb-2\\\">\\n                  <label className=\\\"block text-gray-700 text-sm font-bold mr-2\\\">Change Password:</label>\\n                  <input type=\\\"password\\\" className=\\\"shadow appearance-none border rounded w-60 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\"/>\\n                </div>\\n                <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center'><Check className='w-4 h-4 mr-2' /> Update Password</button>\\n            </div>\\n       <div className=\\\"bg-white shadow rounded p-4\\\">\\n            <h3 className=\\\"text-lg font-semibold mb-2\\\">Notifications</h3>\\n            <div className='flex items-center space-x-4 mb-2'>\\n               <label className=\\\"block text-gray-700 text-sm font-bold\\\">Enable Notifications</label>\\n               <button className='bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center'><Check className='w-4 h-4 mr-2'/> Enable</button>\\n            </div>\\n             <div className='flex items-center space-x-4 mb-2'>\\n               <label className=\\\"block text-gray-700 text-sm font-bold\\\">Disable Notifications</label>\\n               <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center'><X className='w-4 h-4 mr-2' /> Disable</button>\\n           </div>\\n        </div>\\n\\n     </div>\\n    </div>\\n  );\\n};\\n\\nexport default Settings;\\n\"\n    }\n  },\n  \"generatedFiles\": [\n    \"/App.js\",\n    \"/components/Layout.js\",\n    \"/components/Sidebar.js\",\n    \"/components/TopBar.js\",\n    \"/components/Dashboard.js\",\n    \"/components/Users.js\",\n    \"/components/Settings.js\"\n  ]\n}\n```\n"},
          ],
        },
      ],
    })
  
    // const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
    // console.log(result.response.text());
